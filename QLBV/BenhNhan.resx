<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CirclePictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>